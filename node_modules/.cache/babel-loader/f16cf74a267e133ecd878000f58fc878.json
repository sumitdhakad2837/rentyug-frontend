{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/data/data/com.termux/files/home/projects/saveYourTime/frontend/src/Screens/AccountScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AccountScreen() {\n  _s();\n\n  const [accScreen, setAccScreen] = useState(false);\n  const [screen, setScreen] = useState('');\n  const [data, setData] = useState({});\n  const [firstname, setFirstname] = useState('');\n  const [settingFirstname, setSettingFirstname] = useState(false);\n  useEffect(() => {\n    axios.post('http://127.0.0.1:8000/account/', {\n      'username': localStorage.getItem('user223')\n    }).then(res => {\n      setData(res.data.profile);\n      setAccScreen(true);\n    });\n  }, []);\n\n  const updateFirstname = () => {\n    if (firstname === '') alert('Cannot asign empty value.');else {\n      axios.post('http://127.0.0.1:8000/setFirstname/', {\n        'username': localStorage.getItem('user223'),\n        'firstname': firstname\n      }).then(res => {\n        setData(res.data.profile);\n        alert(res.data.profile);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AccountScreen\",\n    children: accScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-20\",\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profileImg\",\n        src: data.Image.Image,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"m-20 f-cursive\",\n        children: [\"@\", data.User.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), settingFirstname ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"First Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setFirstname(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            updateFirstname();\n            setSettingFirstname(false);\n          },\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"First Name : \", data.User.first_name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSettingFirstname(true);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Last Name : \", data.User.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Email : \", data.User.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), data.Service ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m-20\",\n          children: \"Your services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccountScreen, \"/p1M15ElIOT7lyfS4iPEv9Vlzxg=\");\n\n_c = AccountScreen;\nexport default AccountScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountScreen\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/projects/saveYourTime/frontend/src/Screens/AccountScreen.js"],"names":["React","useState","useEffect","axios","AccountScreen","accScreen","setAccScreen","screen","setScreen","data","setData","firstname","setFirstname","settingFirstname","setSettingFirstname","post","localStorage","getItem","then","res","profile","updateFirstname","alert","Image","User","username","e","target","value","first_name","last_name","email","Service"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction AccountScreen(){\n\n\tconst [accScreen, setAccScreen] = useState(false);\n\tconst [screen, setScreen] = useState('');\n\tconst [data, setData] = useState({});\n\n\tconst [firstname, setFirstname] = useState('');\n\tconst [settingFirstname, setSettingFirstname] = useState(false);\n\n\tuseEffect(()=>{\n\t\taxios.post('http://127.0.0.1:8000/account/',{'username':localStorage.getItem('user223')})\n\t\t.then(res=>{\n\t\t\tsetData(res.data.profile);\n\t\t\tsetAccScreen(true);\n\t\t\t\n\t\t})\n\t},[]);\n\n\n\tconst updateFirstname=()=>{\n\t\tif (firstname==='') alert('Cannot asign empty value.');\n\t\telse{\n\t\t\taxios.post('http://127.0.0.1:8000/setFirstname/',{\n\t\t\t\t\t\t\t'username':localStorage.getItem('user223'),\n\t\t\t\t\t\t\t'firstname':firstname\n\t\t\t\t\t\t\t})\n\t\t\t.then(res=>{\n\t\t\t\tsetData(res.data.profile);\n\t\t\t\talert(res.data.profile);\n\t\t\t})\n\t\t}\n\t}\n\t\n\treturn(\n\t\t<div className='AccountScreen'>\n\t\t\t{accScreen?<div>\n\t\t\t\t<h1 className='m-20'>Account</h1>\n\t\t\t\t<img className='profileImg' src={data.Image.Image} alt='Profile'/>\n\t\t\t\t<h4 className='m-20 f-cursive'>@{data.User.username}</h4>\n\n\t\t\t\t{settingFirstname?<h3>First Name : <input type='text' \n\t\t\t\t\tonChange={e=>{setFirstname(e.target.value)}}/><button\n\t\t\t\t\t\t\t\t\tonClick={()=>{updateFirstname(); setSettingFirstname(false);}}\n\t\t\t\t\t\t\t\t>Set</button>\n\t\t\t\t</h3>:<h3>\n\t\t\t\t\tFirst Name : {data.User.first_name}<button\n\t\t\t\t\tonClick={()=>{setSettingFirstname(true)}}\n\t\t\t\t>Update</button></h3>}\n\n\n\t\t\t\t\n\t\t\t\t<h3>Last Name : {data.User.last_name}</h3>\n\t\t\t\t<h3>Email : {data.User.email}</h3>\n\t\t\t\t{data.Service?<div>\n\t\t\t\t\t<h1 className='m-20'>Your services</h1>\n\n\t\t\t\t</div>:''}\n\t\t\t</div>:''}\n\t\t</div>\n\t);\n}\n\nexport default AccountScreen;\n"]},"metadata":{},"sourceType":"module"}