{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/data/data/com.termux/files/home/projects/saveYourTime/frontend/src/Screens/MessageScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MessageCard from '../Components/MessageCard';\nimport MessageBox from './MessageBox';\nimport axios from 'axios';\n\nfunction MessageScreen() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [msgBox, setMsgBox] = useState(false);\n  const [msgingTo, setMsgingTo] = useState('x');\n  useEffect(() => {\n    axios.post('http://127.0.0.1:8000/messageBox/', {\n      'Username': localStorage.getItem('Username')\n    }).then(res => {\n      setData(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [msgBox]);\n\n  const handleClick = msgMan => {\n    setMsgingTo(msgMan);\n    axios.post('http://127.0.0.1:8000/messages/', {\n      'Username': localStorage.getItem('Username'),\n      'MessagePartner': msgMan\n    }).then(res => {\n      setMessages(res.data);\n      setMsgBox(true);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleSendingMsg = (msg, msgMan) => {\n    axios.post('http://127.0.0.1:8000/addMessages/', {\n      'SendBy': localStorage.getItem('Username'),\n      'Message': msg,\n      'RecievedBy': msgMan\n    }).then(res => {\n      setMessages(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MessageScreen\",\n    children: [msgBox ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MessageBoxOuter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"cross\",\n        onClick: () => setMsgBox(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n        handleSendingMsg: handleSendingMsg,\n        msgingTo: msgingTo,\n        handleRegularRender: handleClick,\n        data: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this) : '', data.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(d.MessagePartner),\n      children: /*#__PURE__*/_jsxDEV(MessageCard, {\n        Username: d.Username,\n        Name: d.MessagePartner,\n        Unread: d.UnreadMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 77\n      }, this)\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MessageScreen, \"lyfOGjaWfU3Wz0xUFPShcQekCCU=\");\n\n_c = MessageScreen;\nexport default MessageScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageScreen\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/projects/saveYourTime/frontend/src/Screens/MessageScreen.js"],"names":["React","useEffect","useState","MessageCard","MessageBox","axios","MessageScreen","data","setData","messages","setMessages","msgBox","setMsgBox","msgingTo","setMsgingTo","post","localStorage","getItem","then","res","catch","err","console","error","handleClick","msgMan","handleSendingMsg","msg","map","d","MessagePartner","Username","UnreadMessages","id"],"mappings":"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","sourcesContent":["import React,{ useEffect ,useState} from 'react';\nimport MessageCard from '../Components/MessageCard';\nimport MessageBox from './MessageBox';\nimport axios from 'axios';\n\n\nfunction MessageScreen(){\n\n\tconst [data, setData] = useState([]);\n\tconst [messages, setMessages] = useState([]);\n\tconst [msgBox, setMsgBox] = useState(false);\n\tconst [msgingTo, setMsgingTo] = useState('x');\n\t\n\t\n\tuseEffect(()=>{\n\t\taxios.post('http://127.0.0.1:8000/messageBox/',{'Username':localStorage.getItem('Username')}).then(res=>{\n\t\t\tsetData(res.data);\n\t\t}).catch(err=>{\n\t\t\tconsole.error(err);\n\t\t})\n\t},[msgBox]);\n\n\tconst handleClick = msgMan=>{\n\t\tsetMsgingTo(msgMan);\n\t\taxios.post('http://127.0.0.1:8000/messages/',{\n\t\t'Username':localStorage.getItem('Username'),\n\t\t'MessagePartner':msgMan\n\t\t}).then(res=>{\n\t\t\tsetMessages(res.data);\n\t\t\tsetMsgBox(true);\n\t\t}).catch(err=>{\n\t\t\tconsole.error(err);\n\t\t})\n\t}\n\n\tconst handleSendingMsg=(msg,msgMan)=>{\n\t\taxios.post('http://127.0.0.1:8000/addMessages/',{\n\t\t\t'SendBy':localStorage.getItem('Username'),\n\t\t\t'Message':msg,\n\t\t\t'RecievedBy':msgMan\n\t\t}).then(res=>{\n\t\t\tsetMessages(res.data);\n\t\t}).catch(err=>{\n\t\t\tconsole.error(err);\n\t\t})\n\t}\n\t\n\treturn(\n\t\t<div className='MessageScreen'>\n\t\t\t{msgBox?<div className='MessageBoxOuter'><h3\n\t\t\tclassName='cross'\n\t\t\tonClick={()=>setMsgBox(false)}>X</h3><MessageBox \n\t\t\thandleSendingMsg={handleSendingMsg}\n\t\t\tmsgingTo={msgingTo}\n\t\t\thandleRegularRender={handleClick}\n\t\t\tdata={messages}/></div>:''}\n\t\t\t\n\t\t\t{data.map(d=><div key={d.id} onClick={()=>handleClick(d.MessagePartner)}><MessageCard \n\t\t\tUsername={d.Username}\n\t\t\tName={d.MessagePartner}\n\t\t\tUnread = {d.UnreadMessages}\n\t\t\t/></div>)}\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default MessageScreen;\n"]},"metadata":{},"sourceType":"module"}